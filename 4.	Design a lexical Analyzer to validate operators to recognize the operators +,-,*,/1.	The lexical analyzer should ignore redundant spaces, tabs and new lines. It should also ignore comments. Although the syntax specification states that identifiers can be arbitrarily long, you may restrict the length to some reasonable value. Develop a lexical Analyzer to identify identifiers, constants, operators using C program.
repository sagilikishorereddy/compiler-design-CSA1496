#include <stdio.h>
#include <ctype.h>
#include <string.h>
#define MAX_TOKEN_LENGTH 100
enum TokenType {
    TOKEN_IDENTIFIER,
    TOKEN_CONSTANT,
    TOKEN_OPERATOR
};
struct Token {
    enum TokenType type;
    char lexeme[MAX_TOKEN_LENGTH];
};
int is_operator(char c) {
    return c == '+' || c == '-' || c == '*' || c == '/' || c == '%' || c == '=';
}
int main() {
    char input[1000];
    printf("Enter input source code:\n");
    fgets(input, sizeof(input), stdin);
    struct Token tokens[1000];
    int num_tokens = 0;
    char buffer[MAX_TOKEN_LENGTH];
    int buffer_len = 0;
    int i = 0;
    while (input[i] != '\0') {
        // ignore redundant spaces, tabs, and new lines
        if (isspace(input[i])) {
            i++;
            continue;
        }
        // ignore comments
        if (input[i] == '/' && input[i + 1] == '/') {
            while (input[i] != '\n' && input[i] != '\0') {
                i++;
            }
            continue;
        }
        // check for operators
        if (is_operator(input[i])) {
            buffer[buffer_len++] = input[i++];
            while (is_operator(input[i])) {
                buffer[buffer_len++] = input[i++];
            }
            buffer[buffer_len] = '\0';
            strcpy(tokens[num_tokens].lexeme, buffer);
            tokens[num_tokens].type = TOKEN_OPERATOR;
            num_tokens++;
            buffer_len = 0;
            continue;
        }
        // check for identifiers
        if (isalpha(input[i])) {
            buffer[buffer_len++] = input[i++];
            while (isalnum(input[i])) {
                buffer[buffer_len++] = input[i++];
            }
            buffer[buffer_len] = '\0';
            strcpy(tokens[num_tokens].lexeme, buffer);
            tokens[num_tokens].type = TOKEN_IDENTIFIER;
            num_tokens++;
            buffer_len = 0;
            continue;
        }
        // check for constants
        if (isdigit(input[i])) {
            buffer[buffer_len++] = input[i++];
            while (isdigit(input[i])) {
                buffer[buffer_len++] = input[i++];
            }
            buffer[buffer_len] = '\0';
            strcpy(tokens[num_tokens].lexeme, buffer);
            tokens[num_tokens].type = TOKEN_CONSTANT;
            num_tokens++;
            buffer_len = 0;
            continue;
        }
        // unrecognized character
        printf("Unrecognized character: %c\n", input[i++]);
    }
    // print the tokens
    printf("Tokens:\n");
    for (int i = 0; i < num_tokens; i++) {
        printf("%d: %s\n", tokens[i].type, tokens[i].lexeme);
    }
    return 0;
}
